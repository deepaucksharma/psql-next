# OHI (On-Host Integration) Compatibility Processor Configuration
# This configuration maps OpenTelemetry metrics to match OHI metric names
# ensuring backward compatibility for existing dashboards and alerts

processors:
  # Transform OTEL metrics to match OHI event types and metric names
  metricstransform/ohi_compatibility:
    transforms:
      # PostgreSQL Sample Metrics (db.* namespace)
      - include: postgresql.bgwriter.checkpoint.count
        action: update
        new_name: db.bgwriter.checkpointsScheduledPerSecond
        operations:
          - action: toggle_scalar_data_type
          
      - include: postgresql.bgwriter.duration
        match_type: strict
        action: update
        new_name: db.bgwriter.checkpointWriteTimeInMillisecondsPerSecond
        operations:
          - action: experimental_scale_value
            scale: 1000  # Convert seconds to milliseconds
            
      - include: postgresql.bgwriter.buffers.writes
        match_type: regexp
        regexp: "^postgresql\\.bgwriter\\.buffers\\.writes$"
        action: update
        new_name: db.bgwriter.buffersWrittenByBackgroundWriterPerSecond
        
      - include: postgresql.commits
        action: update
        new_name: db.commitsPerSecond
        
      - include: postgresql.rollbacks
        action: update
        new_name: db.rollbacksPerSecond
        
      - include: postgresql.blocks_read
        action: update
        new_name: db.reads.blocksPerSecond
        
      - include: postgresql.blocks_written
        action: update
        new_name: db.writes.blocksPerSecond
        
      # Database size metrics
      - include: postgresql.database.count
        action: update
        new_name: db.database.count
        
      - include: postgresql.table.count
        action: update
        new_name: db.table.count
        
      - include: postgresql.database.size
        action: update
        new_name: db.database.sizeInBytes
        
      # Connection metrics
      - include: postgresql.database.backends
        action: update
        new_name: db.connections.active
        
      - include: postgresql.connection.max
        action: update
        new_name: db.connections.max
        
      # Replication metrics
      - include: postgresql.replication.data_delay
        action: update
        new_name: db.replication.lagInBytes
        operations:
          - action: experimental_scale_value
            scale: 1  # Already in bytes
            
      # WAL metrics
      - include: postgresql.wal.age
        action: update
        new_name: db.wal.age
        
      - include: postgresql.wal.lag
        action: update
        new_name: db.wal.lag
        
  # Add OHI-compatible attributes/dimensions
  attributes/ohi_compatibility:
    actions:
      # Add OHI-style entity attributes
      - key: entity.name
        from_attribute: service.name
        action: insert
        
      - key: entity.type
        value: PostgreSQLNode
        action: insert
        
      - key: provider.instance.id
        from_attribute: host.id
        action: insert
        
      # Standardize database attributes
      - key: database
        from_attribute: db.name
        action: insert
        
      - key: hostname
        from_attribute: host.name
        action: insert
        
      # Add integration metadata
      - key: integration.name
        value: com.newrelic.postgresql
        action: insert
        
      - key: integration.version
        value: "2.0.0-otel"
        action: insert
        
  # Transform query performance metrics to match OHI slow query events
  metricstransform/slow_queries:
    transforms:
      # Query count metrics
      - include: db.sql.count
        action: update
        new_name: db.query.count
        
      - include: db.sql.mean_duration
        action: update
        new_name: db.query.mean_duration
        operations:
          - action: experimental_scale_value
            scale: 1000  # Convert to milliseconds
            
      - include: db.sql.duration
        action: update
        new_name: db.query.duration
        
      # I/O metrics from queries
      - include: db.sql.io.disk_reads
        action: update
        new_name: db.io.disk_reads
        
      - include: db.sql.io.disk_writes
        action: update
        new_name: db.io.disk_writes
        
      - include: db.sql.rows
        action: update
        new_name: db.query.rows
        
  # Calculate derived metrics that OHI provides
  metricstransform/derived_metrics:
    transforms:
      # Buffer hit ratio calculation
      # This would need a custom processor to calculate from blocks_read
      - include: postgresql.blocks_read
        action: aggregate
        aggregation_type: sum
        submatch_case: "source"
        
  # MySQL InnoDB metrics mapping for OHI compatibility
  metricstransform/mysql_ohi:
    transforms:
      # InnoDB buffer pool metrics
      - include: mysql.buffer_pool.data_pages
        action: update
        new_name: db.innodb.bufferPoolDataPages
        
      - include: mysql.buffer_pool.page_flushes
        action: update
        new_name: db.innodb.bufferPoolPagesFlushedPerSecond
        
      - include: mysql.buffer_pool.pages
        match_type: regexp
        regexp: "^mysql\\.buffer_pool\\.pages\\.(dirty|free|total)$"
        action: update
        new_name: db.innodb.bufferPool${1}Pages
        
      # Query cache metrics
      - include: mysql.query_cache.hits
        action: update
        new_name: db.queryCacheHitsPerSecond
        
      - include: mysql.query_cache.size
        action: update
        new_name: db.queryCacheSizeInBytes
        
      # Handler metrics
      - include: mysql.handlers.write
        action: update
        new_name: db.handler.writePerSecond
        
      - include: mysql.handlers.read_rnd_next
        action: update
        new_name: db.handler.readRndNextPerSecond
        
      # Replication metrics
      - include: mysql.replica.sql_delay
        action: update
        new_name: db.replication.secondsBehindMaster
        
      - include: mysql.replica.time_behind_source
        action: update
        new_name: db.replication.lagInMilliseconds
        operations:
          - action: experimental_scale_value
            scale: 1000
            
  # Resource detection for OHI entity synthesis
  resource/ohi_entity:
    attributes:
      - key: nr.entity.type
        value: POSTGRESQL_NODE
        action: insert
        
      - key: nr.entity.name
        from_attribute: db.system
        action: insert
        
      - key: nr.entity.guid
        from_attribute: host.id
        action: insert

# Pipeline configuration example
service:
  pipelines:
    metrics/postgresql:
      receivers: [postgresql, sqlquery]
      processors:
        - memory_limiter
        - resource/ohi_entity
        - attributes/ohi_compatibility
        - metricstransform/ohi_compatibility
        - metricstransform/slow_queries
        - metricstransform/derived_metrics
        - batch
      exporters: [otlp/newrelic]
      
    metrics/mysql:
      receivers: [mysql, sqlquery]
      processors:
        - memory_limiter
        - resource/ohi_entity
        - attributes/ohi_compatibility
        - metricstransform/mysql_ohi
        - batch
      exporters: [otlp/newrelic]