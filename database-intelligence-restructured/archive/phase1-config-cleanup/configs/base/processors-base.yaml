# Base Processors Configuration
# Standard processor pipeline extracted from collector configurations

processors:
  # Memory limiter - first processor to prevent OOM
  memory_limiter:
    limit_mib: ${env:MEMORY_LIMIT_MIB:-512}
    spike_limit_mib: ${env:MEMORY_SPIKE_LIMIT_MIB:-128}
    check_interval: ${env:MEMORY_CHECK_INTERVAL:-1s}

  # Adaptive sampler - intelligent sampling based on rules
  adaptivesampler:
    sampling_percentage: ${env:ADAPTIVE_SAMPLING_PERCENTAGE:-10}
    max_traces_per_second: ${env:MAX_TRACES_PER_SECOND:-100}
    decision_cache:
      sampled_cache_size: ${env:SAMPLED_CACHE_SIZE:-100000}
      nonsampled_cache_size: ${env:NONSAMPLED_CACHE_SIZE:-100000}
    sampling_rules:
      - service_name_pattern: "database-.*"
        span_name_pattern: "SELECT.*"
        sampling_percentage: ${env:SELECT_SAMPLING_PERCENTAGE:-5}
      - service_name_pattern: "database-.*"
        span_name_pattern: "(INSERT|UPDATE|DELETE).*"
        sampling_percentage: ${env:DML_SAMPLING_PERCENTAGE:-50}
      - attribute_key: "db.sql.table"
        attribute_value_pattern: ".*_audit|.*_log"
        sampling_percentage: ${env:AUDIT_SAMPLING_PERCENTAGE:-1}

  # Circuit breaker - database overload protection
  circuit_breaker:
    max_failures: ${env:CIRCUIT_BREAKER_MAX_FAILURES:-5}
    failure_threshold_percentage: ${env:CIRCUIT_BREAKER_FAILURE_THRESHOLD:-50}
    timeout: ${env:CIRCUIT_BREAKER_TIMEOUT:-30s}
    recovery_timeout: ${env:CIRCUIT_BREAKER_RECOVERY_TIMEOUT:-60s}
    per_database_circuit: ${env:PER_DATABASE_CIRCUIT:-true}
    health_check_interval: ${env:HEALTH_CHECK_INTERVAL:-10s}

  # Plan attribute extractor - SQL plan analysis and anonymization
  planattributeextractor:
    enable_anonymization: ${env:ENABLE_ANONYMIZATION:-true}
    enable_plan_analysis: ${env:ENABLE_PLAN_ANALYSIS:-true}
    max_query_length: ${env:MAX_QUERY_LENGTH:-4096}
    anonymization_rules:
      - pattern: "IN \\([^)]+\\)"
        replacement: "IN (...)"
      - pattern: "VALUES \\([^)]+\\)"
        replacement: "VALUES (...)"
      - pattern: "'[^']*'"
        replacement: "?"
      - pattern: "\\b\\d+\\b"
        replacement: "?"
    plan_cache:
      enabled: ${env:PLAN_CACHE_ENABLED:-true}
      max_size: ${env:PLAN_CACHE_MAX_SIZE:-10000}
      ttl: ${env:PLAN_CACHE_TTL:-3600s}

  # Verification processor - PII detection and data quality
  verification:
    enable_pii_detection: ${env:ENABLE_PII_DETECTION:-true}
    enable_data_validation: ${env:ENABLE_DATA_VALIDATION:-true}
    pii_patterns:
      - name: "email"
        pattern: "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
        action: "redact"
      - name: "ssn"
        pattern: "\\b\\d{3}-\\d{2}-\\d{4}\\b"
        action: "redact"
      - name: "credit_card"
        pattern: "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"
        action: "redact"
    max_field_length: ${env:MAX_FIELD_LENGTH:-1000}
    sample_rate: ${env:VERIFICATION_SAMPLE_RATE:-0.1}

  # Cost control - budget enforcement and resource monitoring
  costcontrol:
    daily_budget_usd: ${env:DAILY_BUDGET_USD:-100}
    monthly_budget_usd: ${env:MONTHLY_BUDGET_USD:-3000}
    cost_per_gb: ${env:COST_PER_GB:-0.25}
    cost_per_million_events: ${env:COST_PER_MILLION_EVENTS:-2.00}
    alert_threshold_percentage: ${env:COST_ALERT_THRESHOLD:-80}
    enforcement_enabled: ${env:COST_ENFORCEMENT_ENABLED:-false}

  # NR error monitor - New Relic integration validation
  nrerrormonitor:
    api_key: ${env:NEW_RELIC_API_KEY}
    account_id: ${env:NEW_RELIC_ACCOUNT_ID}
    enable_validation: ${env:ENABLE_NR_VALIDATION:-true}
    validation_interval: ${env:NR_VALIDATION_INTERVAL:-300s}
    error_threshold: ${env:NR_ERROR_THRESHOLD:-10}

  # Query correlator - cross-service correlation
  querycorrelator:
    correlation_window: ${env:CORRELATION_WINDOW:-30s}
    max_correlations: ${env:MAX_CORRELATIONS:-1000}
    correlation_keys:
      - "transaction_id"
      - "user_id"
      - "session_id"
    enable_trace_correlation: ${env:ENABLE_TRACE_CORRELATION:-true}

  # Resource processor - add standard resource attributes
  resource:
    attributes:
      - key: service.name
        value: ${env:SERVICE_NAME:-database-intelligence-collector}
        action: upsert
      - key: service.version
        value: ${env:SERVICE_VERSION:-2.0.0}
        action: upsert
      - key: deployment.environment
        value: ${env:DEPLOYMENT_ENVIRONMENT:-development}
        action: upsert
      - key: service.instance.id
        from_attribute: host.name
        action: upsert

  # Attributes processor - attribute manipulation
  attributes:
    actions:
      - key: db.connection_string
        action: delete
      - key: db.password
        action: delete
      - key: http.request.header.authorization
        action: delete
      - key: db.sql.normalized
        from_attribute: db.statement
        action: upsert

  # Batch processor - batch telemetry for efficiency
  batch:
    timeout: ${env:BATCH_TIMEOUT:-1s}
    send_batch_size: ${env:BATCH_SIZE:-1024}
    send_batch_max_size: ${env:BATCH_MAX_SIZE:-2048}