# Staging Environment Configuration
# Pre-production testing with production-like settings

# Staging service configuration
service:
  extensions: [health_check, pprof, zpages, memory_ballast, filestorage]
  pipelines:
    metrics:
      receivers: [postgresql, mysql, sqlquery/postgresql, sqlquery/mysql]
      processors: [
        memory_limiter, 
        adaptivesampler, 
        circuit_breaker,
        planattributeextractor, 
        verification, 
        costcontrol,
        nrerrormonitor,
        querycorrelator,
        resource, 
        attributes, 
        batch
      ]
      exporters: [otlphttp/newrelic, prometheus, logging]
    traces:
      receivers: [otlp, enhancedsql/postgresql]
      processors: [
        memory_limiter,
        adaptivesampler,
        circuit_breaker, 
        planattributeextractor,
        verification,
        querycorrelator,
        resource,
        attributes,
        batch
      ]
      exporters: [otlphttp/newrelic, logging]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, attributes, verification, batch]
      exporters: [otlphttp/newrelic, logging]

  telemetry:
    logs:
      level: ${env:OTEL_LOG_LEVEL:-info}
      encoding: json
      disable_caller: false
      disable_stacktrace: false
    metrics:
      level: ${env:OTEL_METRICS_LEVEL:-detailed}
      address: 0.0.0.0:8888
    resource:
      service.name: ${env:SERVICE_NAME:-database-intelligence-collector-staging}
      service.version: ${env:SERVICE_VERSION:-2.0.0}
      deployment.environment: staging

# Staging-optimized processor settings (between dev and prod)
processors:
  # Staging memory limits
  memory_limiter:
    limit_mib: 768
    spike_limit_mib: 192
    check_interval: 1s

  # Moderate sampling for staging
  adaptivesampler:
    sampling_percentage: 25
    max_traces_per_second: 200
    sampling_rules:
      - service_name_pattern: "database-.*"
        span_name_pattern: "SELECT.*"
        sampling_percentage: 15
      - service_name_pattern: "database-.*"  
        span_name_pattern: "(INSERT|UPDATE|DELETE).*"
        sampling_percentage: 40
      - attribute_key: "db.sql.table"
        attribute_value_pattern: ".*_audit|.*_log"
        sampling_percentage: 5

  # Staging circuit breaker
  circuit_breaker:
    max_failures: 8
    failure_threshold_percentage: 60
    timeout: 20s
    recovery_timeout: 45s
    per_database_circuit: true

  # Staging plan extraction with anonymization
  planattributeextractor:
    enable_anonymization: true
    enable_plan_analysis: true
    max_query_length: 3072
    debug_mode: false
    plan_cache:
      enabled: true
      max_size: 5000
      ttl: 2400s

  # Staging verification with PII detection
  verification:
    enable_pii_detection: true
    enable_data_validation: true
    sample_rate: 0.25
    max_field_length: 750

  # Staging cost controls
  costcontrol:
    daily_budget_usd: 50
    monthly_budget_usd: 1500
    alert_threshold_percentage: 75
    enforcement_enabled: false  # Testing without enforcement

  # New Relic monitoring with staging settings
  nrerrormonitor:
    enable_validation: true
    validation_interval: 180s
    error_threshold: 15

  # Staging correlation settings
  querycorrelator:
    correlation_window: 45s
    max_correlations: 2000
    enable_trace_correlation: true

  # Staging resource attributes
  resource:
    attributes:
      - key: service.name
        value: ${env:SERVICE_NAME:-database-intelligence-collector-staging}
        action: upsert
      - key: service.version
        value: ${env:SERVICE_VERSION:-2.0.0}
        action: upsert
      - key: deployment.environment
        value: staging
        action: upsert
      - key: service.instance.id
        from_attribute: host.name
        action: upsert
      - key: k8s.cluster.name
        value: ${env:K8S_CLUSTER_NAME:-staging-cluster}
        action: upsert
      - key: k8s.namespace.name
        value: ${env:K8S_NAMESPACE_NAME:-db-intelligence-staging}
        action: upsert

  # Staging batch settings
  batch:
    timeout: 1s
    send_batch_size: 512
    send_batch_max_size: 1024

# Staging exporter settings
exporters:
  # Staging New Relic export
  otlphttp/newrelic:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT:-https://staging-api.newrelic.com/v1/otlp}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    timeout: 20s
    retry_on_failure:
      enabled: true
      initial_interval: 3s
      max_interval: 15s
      max_elapsed_time: 120s
    sending_queue:
      enabled: true
      num_consumers: 8
      queue_size: 3000

  # Staging Prometheus export
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: staging_database_intelligence
    const_labels:
      service: database-intelligence-collector
      version: ${env:SERVICE_VERSION:-2.0.0}
      environment: staging
      cluster: ${env:K8S_CLUSTER_NAME:-staging-cluster}
    metric_expiration: 15m

  # Enhanced logging for staging debugging
  logging:
    loglevel: info
    sampling_initial: 10
    sampling_thereafter: 100

# Staging receiver settings
receivers:
  # Staging collection intervals
  postgresql:
    collection_interval: 45s
    tls:
      insecure: false
      cert_file: ${env:POSTGRES_CERT_FILE}
      key_file: ${env:POSTGRES_KEY_FILE}
      ca_file: ${env:POSTGRES_CA_FILE}
    
  mysql:
    collection_interval: 45s
    tls:
      insecure: false
      cert_file: ${env:MYSQL_CERT_FILE}
      key_file: ${env:MYSQL_KEY_FILE}
      ca_file: ${env:MYSQL_CA_FILE}
    
  sqlquery/postgresql:
    collection_interval: 180s
    
  sqlquery/mysql:
    collection_interval: 180s

  # Enhanced SQL with limited plan collection
  enhancedsql/postgresql:
    enable_plan_collection: true
    plan_cache_size: 500
    collection_interval: 90s

# Staging extensions
extensions:
  # Health check with staging settings
  health_check:
    endpoint: 0.0.0.0:13133
    check_collector_pipeline:
      enabled: true
      interval: 3m
      exporter_failure_threshold: 8

  # pprof accessible for staging debugging
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages for staging diagnostics
  zpages:
    endpoint: 0.0.0.0:55679

  # File storage for staging persistence
  filestorage:
    directory: /var/lib/otelcol/storage
    timeout: 2s
    compaction:
      on_start: false
      on_rebound: true
      rebound_needed_threshold_mib: 75