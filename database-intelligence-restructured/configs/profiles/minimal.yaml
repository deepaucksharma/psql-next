# Minimal Profile Configuration
# Lightweight deployment with standard OpenTelemetry components only

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  
  postgresql:
    endpoint: ${env:POSTGRES_DSN}
    collection_interval: 10s
    username: monitoring
    password: ${env:POSTGRES_PASSWORD}
    databases:
      - postgres
    
  mysql:
    endpoint: ${env:MYSQL_DSN}
    collection_interval: 10s
    username: monitoring
    password: ${env:MYSQL_PASSWORD}
    
  sqlquery:
    interval: 30s
    drivers:
      - driver: postgres
        datasource: ${env:POSTGRES_DSN}
        queries:
          - sql: "SELECT count(*) as active_connections FROM pg_stat_activity"
            name: db.connections.active
      - driver: mysql
        datasource: ${env:MYSQL_DSN}
        queries:
          - sql: "SELECT count(*) as active_connections FROM information_schema.processlist"
            name: db.connections.active

processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128
    
  batch:
    timeout: 10s
    send_batch_size: 1024
    
  resource:
    attributes:
      - key: service.name
        value: database-intelligence
        action: insert
      - key: deployment.environment
        value: ${env:DEPLOYMENT_ENV}
        action: insert
        
  attributes:
    actions:
      - key: db.system
        action: insert
        from_attribute: database.type
      - key: internal
        action: delete

exporters:
  otlphttp:
    endpoint: ${env:OTLP_ENDPOINT}
    headers:
      api-key: ${env:OTLP_API_KEY}
      
  debug:
    verbosity: basic
    sampling_initial: 10
    sampling_thereafter: 100

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: /health
    
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, zpages]
  
  pipelines:
    metrics:
      receivers: [postgresql, mysql, sqlquery, otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlphttp, debug]
      
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [otlphttp]
      
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [otlphttp]
      
  telemetry:
    logs:
      level: ${env:LOG_LEVEL}
      encoding: json
    metrics:
      level: basic
      address: 0.0.0.0:8888