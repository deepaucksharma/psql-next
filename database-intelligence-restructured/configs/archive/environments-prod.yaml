# Production Environment Overlay
# This overlay modifies the base configuration for production use
# 
# Changes from base:
# - Conservative collection intervals
# - Strict resource limits and cost controls
# - Enhanced security with TLS
# - Multiple redundant export paths
# - Full monitoring and protection features
# - No debug outputs

# Production receivers with optimized settings
receivers:
  postgresql:
    collection_interval: 60s
    tls:
      insecure: false
      ca_file: ${env:POSTGRES_CA_FILE}
      cert_file: ${env:POSTGRES_CERT_FILE}
      key_file: ${env:POSTGRES_KEY_FILE}
      min_version: "1.2"

  mysql:
    collection_interval: 60s
    tls:
      insecure: false
      ca_file: ${env:MYSQL_CA_FILE}

  sqlquery/postgresql:
    collection_interval: 300s
    queries:
      # Add timeout protection for all queries
      - sql: |
          SET LOCAL statement_timeout = '5000ms';
          SET LOCAL lock_timeout = '100ms';
          SELECT extname as extension_name, extversion as version, 1 as available
          FROM pg_extension
          WHERE extname IN ('pg_stat_statements', 'pg_stat_monitor', 'pg_wait_sampling', 'auto_explain')
        metrics:
          - metric_name: postgresql_extension_available
            value_column: available
            attribute_columns: [extension_name, version]
  
  sqlquery/mysql:
    collection_interval: 300s

  # Enhanced SQL with connection pooling
  enhancedsql/postgresql:
    driver: postgres
    datasource: "host=${env:POSTGRES_HOST} port=${env:POSTGRES_PORT} user=${env:POSTGRES_USER} password=${env:POSTGRES_PASSWORD} dbname=${env:POSTGRES_DB} sslmode=require sslcert=${env:POSTGRES_CERT_FILE} sslkey=${env:POSTGRES_KEY_FILE} sslrootcert=${env:POSTGRES_CA_FILE}"
    collection_interval: 60s
    max_open_connections: 25
    max_idle_connections: 10
    connection_max_lifetime: 30m
    enable_plan_collection: true
    plan_cache_size: 1000
    feature_detection:
      enabled: true
      cache_duration: 10m
      refresh_interval: 1h

# Production processors with all protection features
processors:
  # Strict memory limits
  memory_limiter:
    limit_mib: 1024
    spike_limit_mib: 256
    check_interval: 1s

  # Optimized batching
  batch:
    timeout: 10s
    send_batch_size: 1000
    send_batch_max_size: 2000

  # Aggressive adaptive sampling
  adaptivesampler:
    sampling_percentage: 10
    max_traces_per_second: 100
    decision_cache:
      sampled_cache_size: 100000
      nonsampled_cache_size: 100000
    sampling_rules:
      - service_name_pattern: "database-.*"
        span_name_pattern: "SELECT.*"
        sampling_percentage: 5
      - service_name_pattern: "database-.*"
        span_name_pattern: "(INSERT|UPDATE|DELETE).*"
        sampling_percentage: 50
      - attribute_key: "db.sql.table"
        attribute_value_pattern: ".*_audit|.*_log"
        sampling_percentage: 1

  # Circuit breaker for reliability
  circuit_breaker:
    max_failures: 5
    failure_threshold_percentage: 50
    timeout: 30s
    recovery_timeout: 60s
    per_database_circuit: true
    health_check_interval: 10s

  # Cost control enforcement
  costcontrol:
    daily_budget_usd: 100
    monthly_budget_usd: 3000
    cost_per_gb: 0.25
    cost_per_million_events: 2.00
    alert_threshold_percentage: 80
    enforcement_enabled: true

  # Plan attribute extractor with caching
  planattributeextractor:
    enable_anonymization: true
    enable_plan_analysis: true
    max_query_length: 4096
    plan_cache:
      enabled: true
      max_size: 10000
      ttl: 3600s

  # Verification with PII protection
  verification:
    enable_pii_detection: true
    enable_data_validation: true
    pii_patterns:
      - name: "email"
        pattern: "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"
        action: "redact"
      - name: "ssn"
        pattern: "\\b\\d{3}-\\d{2}-\\d{4}\\b"
        action: "redact"
      - name: "credit_card"
        pattern: "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"
        action: "redact"
      - name: "phone"
        pattern: "\\b\\d{3}[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b"
        action: "redact"
    max_field_length: 1000
    sample_rate: 0.1

  # Query correlator
  querycorrelator:
    correlation_window: 30s
    max_correlations: 1000
    correlation_keys:
      - "transaction_id"
      - "user_id"
      - "session_id"
    enable_trace_correlation: true

  # New Relic error monitor
  nrerrormonitor:
    api_key: ${env:NEW_RELIC_API_KEY}
    account_id: ${env:NEW_RELIC_ACCOUNT_ID}
    enable_validation: true
    validation_interval: 300s
    error_threshold: 10

# Production exporters with redundancy
exporters:
  # Primary OTLP export
  otlphttp:
    endpoint: ${env:PROD_OTLP_ENDPOINT:-https://otlp.nr-data.net}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 5000
      storage: filestorage

  # Secondary OTLP/gRPC for high throughput
  otlp/grpc:
    endpoint: ${env:PROD_OTLP_GRPC_ENDPOINT:-https://otlp.nr-data.net:4317}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    timeout: 30s
    keepalive:
      time: 10s
      timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # Prometheus for internal monitoring only
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: database_intelligence_prod
    metric_expiration: 10m
    enable_open_metrics: true

  # Minimal logging for errors only
  logging:
    loglevel: error
    sampling_initial: 100
    sampling_thereafter: 10000

  # NRI exporter with rate limiting
  nri:
    integration_name: com.newrelic.postgresql
    integration_version: 2.0.0
    protocol_version: 2
    entity:
      type: PostgreSQLInstance
      name_source: db.name
      display_name_template: "{{.db.name}} ({{.net.host.name}})"
    output:
      mode: http
      http_endpoint: https://metric-api.newrelic.com/metric/v1
      api_key: ${env:NEW_RELIC_INGEST_KEY}
      batch_size: 1000
      flush_interval: 10s
    rate_limiting:
      enabled: true
      rps: 1000
      burst: 200
      enable_adaptive: true

# Production service configuration
service:
  extensions: [health_check, zpages, filestorage]

  telemetry:
    logs:
      level: warn
      development: false
      encoding: json
      output_paths: ["stdout", "/var/log/otel-collector/production.log"]
      error_output_paths: ["stderr", "/var/log/otel-collector/production-error.log"]
      initial_fields:
        service: database-intelligence
        environment: production
    metrics:
      level: basic
      address: 0.0.0.0:8888

  # Production pipelines with full processing
  pipelines:
    # Main metrics pipeline with all processors
    metrics/primary:
      receivers: [postgresql, mysql, sqlquery/postgresql, sqlquery/mysql, enhancedsql/postgresql]
      processors: 
        - memory_limiter
        - batch
        - adaptivesampler
        - circuit_breaker
        - costcontrol
        - planattributeextractor
        - querycorrelator
        - verification
        - resource
        - attributes
      exporters: [otlphttp, nri, prometheus]

    # Critical metrics bypass sampling
    metrics/critical:
      receivers: [postgresql, mysql]
      processors:
        - memory_limiter
        - batch
        - circuit_breaker
        - verification
        - resource
        - attributes
      exporters: [otlphttp, otlp/grpc]

    # Traces with full processing
    traces:
      receivers: [otlp]
      processors:
        - memory_limiter
        - batch
        - adaptivesampler
        - circuit_breaker
        - costcontrol
        - verification
        - resource
        - attributes
      exporters: [otlphttp]

    # Logs with monitoring
    logs:
      receivers: [otlp, enhancedsql/postgresql]
      processors:
        - memory_limiter
        - batch
        - nrerrormonitor
        - verification
        - resource
        - attributes
      exporters: [otlphttp, nri]