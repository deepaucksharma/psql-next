# Development Environment Overlay
# This overlay modifies the base configuration for development use
# 
# Changes from base:
# - More verbose logging
# - Lower collection intervals for faster feedback
# - Debug exporters enabled
# - Less strict resource limits
# - No authentication required

# Override receivers for development
receivers:
  # PostgreSQL with frequent collection for testing
  postgresql:
    collection_interval: 10s
    tls:
      insecure: true

  # MySQL with frequent collection
  mysql:
    collection_interval: 10s

  # SQL Query with more frequent updates
  sqlquery/postgresql:
    collection_interval: 30s
  
  sqlquery/mysql:
    collection_interval: 30s

# Development-friendly processors
processors:
  # Higher memory limits for development
  memory_limiter:
    limit_mib: 1024
    spike_limit_mib: 256

  # Smaller batches for faster feedback
  batch:
    timeout: 500ms
    send_batch_size: 100
    send_batch_max_size: 200

  # Add debug attributes
  attributes:
    actions:
      - key: debug.enabled
        value: true
        action: upsert
      - key: debug.timestamp
        value: ${env:HOSTNAME}
        action: upsert

# Development exporters - focus on debugging
exporters:
  # Enable debug output
  debug:
    verbosity: detailed
    sampling:
      initial: 1
      thereafter: 1

  # More verbose logging
  logging:
    loglevel: debug
    sampling_initial: 1
    sampling_thereafter: 1

  # File exporter for local inspection
  file:
    path: /tmp/otel-dev-data.json
    rotation:
      max_megabytes: 10
      max_days: 1
      max_backups: 3
    format: json

# Service configuration for development
service:
  # Enable all debugging extensions
  extensions: [health_check, pprof, zpages, filestorage]

  # Development telemetry settings
  telemetry:
    logs:
      level: debug
      development: true
      encoding: console  # Human-readable format
      disable_caller: false
      disable_stacktrace: false
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  # Development pipelines with all exporters
  pipelines:
    metrics:
      receivers: [postgresql, mysql, sqlquery/postgresql, sqlquery/mysql, otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [debug, logging, file, prometheus]

    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [debug, logging, file]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [debug, logging, file]