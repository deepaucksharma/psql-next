version: '3.8'

services:
  mysql-primary:
    image: mysql:8.0
    container_name: mysql-primary
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-testdb}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppassword}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_primary_data:/var/lib/mysql
      - ./config/mysql/primary.cnf:/etc/mysql/conf.d/custom.cnf
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      interval: 10s
    networks:
      - mysql-network

  mysql-replica:
    image: mysql:8.0
    container_name: mysql-replica
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-testdb}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppassword}
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_replica_data:/var/lib/mysql
      - ./config/mysql/replica.cnf:/etc/mysql/conf.d/custom.cnf
    command: --default-authentication-plugin=mysql_native_password
    depends_on:
      mysql-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      interval: 10s
    networks:
      - mysql-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    environment:
      # MySQL Configuration
      MYSQL_PRIMARY_ENDPOINT: mysql-primary:3306
      MYSQL_REPLICA_ENDPOINT: mysql-replica:3306
      MYSQL_USER: otel_monitor
      MYSQL_PASSWORD: ${MYSQL_MONITOR_PASSWORD:-otelmonitorpass}
      MYSQL_DATABASE: ""
      MYSQL_VERSION: "8.0"
      
      # New Relic Configuration
      NEW_RELIC_API_KEY: ${NEW_RELIC_API_KEY}
      NEW_RELIC_ACCOUNT_ID: ${NEW_RELIC_ACCOUNT_ID}
      NEW_RELIC_OTLP_ENDPOINT: ${NEW_RELIC_OTLP_ENDPOINT:-https://otlp.nr-data.net:4318}
      
      # Environment Settings
      ENVIRONMENT: ${ENVIRONMENT:-development}
      NAMESPACE: docker
      TEAM_NAME: ${TEAM_NAME:-database-team}
      SERVICE_NAME: ${SERVICE_NAME:-mysql-monitoring}
      COST_CENTER: ${COST_CENTER:-engineering}
      CLUSTER_NAME: ${CLUSTER_NAME:-mysql-cluster}
      MYSQL_ROLE: ${MYSQL_ROLE:-primary}
      
      # Cloud Provider Settings
      CLOUD_PROVIDER: ${CLOUD_PROVIDER:-docker}
      CLOUD_REGION: ${CLOUD_REGION:-local}
      
      # Master Configuration Settings
      DEPLOYMENT_MODE: ${DEPLOYMENT_MODE:-advanced}
      ENABLE_SQL_INTELLIGENCE: ${ENABLE_SQL_INTELLIGENCE:-true}
      MYSQL_COLLECTION_INTERVAL: ${MYSQL_COLLECTION_INTERVAL:-5s}
      SQL_INTELLIGENCE_INTERVAL: ${SQL_INTELLIGENCE_INTERVAL:-5s}
      BATCH_SIZE: ${BATCH_SIZE:-1000}
      MEMORY_LIMIT_PERCENT: ${MEMORY_LIMIT_PERCENT:-80}
      SCRAPE_INTERVAL: ${SCRAPE_INTERVAL:-10s}
      PERFORMANCE_SCHEMA_EVENTS_LIMIT: ${PERFORMANCE_SCHEMA_EVENTS_LIMIT:-100}
      WAIT_PROFILE_ENABLED: ${WAIT_PROFILE_ENABLED:-true}
      ML_FEATURES_ENABLED: ${ML_FEATURES_ENABLED:-true}
      BUSINESS_CONTEXT_ENABLED: ${BUSINESS_CONTEXT_ENABLED:-true}
      ANOMALY_DETECTION_ENABLED: ${ANOMALY_DETECTION_ENABLED:-true}
      ADVISOR_ENGINE_ENABLED: ${ADVISOR_ENGINE_ENABLED:-true}
      
      # Resource limits
      GOMAXPROCS: "2"
      GOMEMLIMIT: "1750MiB"
      OTEL_FILE_STORAGE_DIR: "/tmp/otel-storage"
    volumes:
      - ./config/collector/master.yaml:/etc/otel-collector-config.yaml:ro
      - otel_storage:/tmp/otel-storage
    ports:
      - "13133:13133" # Health check extension
      - "55679:55679" # zPages extension
      - "1777:1777"   # pprof extension
    depends_on:
      mysql-primary:
        condition: service_healthy
      mysql-replica:
        condition: service_healthy
    networks:
      - mysql-network
    restart: unless-stopped

  # Sample application to generate MySQL traffic
  mysql-app:
    image: python:3.9-slim
    container_name: mysql-app
    environment:
      MYSQL_HOST: mysql-primary
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-testdb}
    volumes:
      - ./examples/python-app:/app
    working_dir: /app
    command: python app.py
    depends_on:
      mysql-primary:
        condition: service_healthy
    networks:
      - mysql-network
    restart: unless-stopped

networks:
  mysql-network:
    driver: bridge

volumes:
  mysql_primary_data:
  mysql_replica_data:
  otel_storage: