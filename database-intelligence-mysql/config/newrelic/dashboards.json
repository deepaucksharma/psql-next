{
  "dashboards": [
    {
      "name": "MySQL Comprehensive Monitoring",
      "description": "Complete MySQL monitoring with intelligence, wait analysis, and business impact",
      "pages": [
        {
          "name": "Overview",
          "widgets": [
            {
              "title": "MySQL Health Score",
              "type": "billboard",
              "query": "SELECT latest(value) as 'Health Score' FROM Metric WHERE metricName = 'mysql.health.score' AND instrumentation.provider = 'opentelemetry' FACET mysql.instance.endpoint SINCE 5 minutes ago",
              "thresholds": [
                {"value": 70, "severity": "warning"},
                {"value": 50, "severity": "critical"}
              ]
            },
            {
              "title": "Active Connections",
              "type": "line",
              "query": "SELECT average(mysql.threads) as 'Current', average(mysql.connection.max) as 'Max' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES AUTO"
            },
            {
              "title": "Query Rate",
              "type": "area",
              "query": "SELECT rate(sum(mysql.query.count), 1 minute) as 'Queries/min' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES AUTO"
            },
            {
              "title": "Database Size",
              "type": "table",
              "query": "SELECT latest(mysql.table.size) as 'Size (MB)' FROM Metric WHERE instrumentation.provider = 'opentelemetry' FACET db.name, table.name LIMIT 20"
            }
          ]
        },
        {
          "name": "Performance Analysis",
          "widgets": [
            {
              "title": "Wait Profile Analysis",
              "type": "bar",
              "query": "SELECT sum(value) as 'Total Wait Time', filter(count(*), WHERE attributes['exec_count'] IS NOT NULL) as 'Executions' FROM Metric WHERE metricName = 'mysql.query.wait_profile' FACET attributes['query_hash'] LIMIT 20 SINCE 1 hour ago"
            },
            {
              "title": "Wait Categories",
              "type": "pie",
              "query": "SELECT sum(value) FROM Metric WHERE metricName = 'mysql.query.wait_profile' FACET attributes['wait.category'] SINCE 1 hour ago"
            },
            {
              "title": "InnoDB Buffer Pool",
              "type": "line",
              "query": "SELECT average(mysql.buffer_pool.usage) as 'Usage %', average(mysql.buffer_pool.hit_ratio) as 'Hit Ratio %' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES AUTO"
            },
            {
              "title": "Lock Waits",
              "type": "area",
              "query": "SELECT sum(mysql.locks.deadlock) as 'Deadlocks', sum(mysql.locks.row_waiting) as 'Row Locks Waiting' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES AUTO"
            }
          ]
        },
        {
          "name": "Intelligence & Advisory",
          "widgets": [
            {
              "title": "Active Advisories",
              "type": "table",
              "query": "SELECT count(*) as 'Count', latest(attributes['advisor.recommendation']) as 'Recommendation', latest(attributes['advisor.priority']) as 'Priority' FROM Metric WHERE attributes['advisor.type'] IS NOT NULL FACET attributes['advisor.type'] SINCE 1 hour ago"
            },
            {
              "title": "Anomaly Detection",
              "type": "billboard",
              "query": "SELECT filter(count(*), WHERE attributes['anomaly.detected'] = true) as 'Active Anomalies', filter(count(*), WHERE attributes['anomaly.severity'] = 'critical') as 'Critical' FROM Metric WHERE instrumentation.provider = 'opentelemetry' SINCE 30 minutes ago",
              "thresholds": [
                {"value": 5, "severity": "warning"},
                {"value": 10, "severity": "critical"}
              ]
            },
            {
              "title": "Intelligence Score Trend",
              "type": "line",
              "query": "SELECT average(value) as 'Score' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' TIMESERIES 5 minutes"
            },
            {
              "title": "Top Intelligence Insights",
              "type": "table",
              "query": "SELECT max(value) as 'Score', latest(attributes['query_text']) as 'Query', latest(attributes['recommendations']) as 'Recommendations' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['query_digest'] LIMIT 10 SINCE 1 hour ago"
            },
            {
              "title": "ðŸ§  AI-Powered Performance Score",
              "type": "billboard",
              "query": "SELECT average(value) as 'Intelligence Score', uniqueCount(attributes['query_digest']) as 'Unique Queries', sum(value) filter(WHERE attributes['ml.is_anomaly'] = 'true') as 'Anomaly Score', max(attributes['business.revenue_impact']) as 'Max Revenue Impact' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' SINCE 5 minutes ago",
              "thresholds": [
                {"value": 150, "severity": "critical"},
                {"value": 100, "severity": "warning"}
              ]
            },
            {
              "title": "ðŸš¨ Critical Business Impact Matrix",
              "type": "heatmap",
              "query": "SELECT histogram(attributes['business.revenue_impact'], 100, 10) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['business_criticality'], attributes['wait_severity'] SINCE 30 minutes ago"
            },
            {
              "title": "ðŸ“ˆ ML Anomaly Detection Timeline",
              "type": "line",
              "query": "SELECT count(*) as 'Anomalies', average(value) as 'Avg Score', max(value) as 'Max Score', uniqueCount(attributes['query_digest']) as 'Unique Queries' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND attributes['ml.is_anomaly'] = 'true' TIMESERIES 1 minute SINCE 2 hours ago"
            },
            {
              "title": "ðŸ’° Cost Impact Analysis",
              "type": "area",
              "query": "SELECT sum(attributes['cost.compute_impact']) as 'Compute Cost', sum(attributes['cost.io_impact']) as 'I/O Cost', sum(attributes['business.revenue_impact']) as 'Revenue at Risk' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['db_schema'] TIMESERIES 5 minutes SINCE 1 hour ago"
            },
            {
              "title": "ðŸŽ¯ Advisory Command Center",
              "type": "table",
              "query": "SELECT latest(attributes['recommendations']) as 'Action Required', count(*) as 'Occurrences', average(value) as 'Avg Impact Score', latest(attributes['advisory.priority']) as 'Priority', latest(attributes['query_text']) as 'Query' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND attributes['advisory.type'] IS NOT NULL FACET attributes['advisory.type'], attributes['query_digest'] SINCE 30 minutes ago LIMIT 20"
            },
            {
              "title": "ðŸ”„ Query Performance Percentiles",
              "type": "line",
              "query": "SELECT percentile(value, 50) as 'P50', percentile(value, 95) as 'P95', percentile(value, 99) as 'P99' FROM Metric WHERE metricName = 'mysql.query.wait_percentiles' FACET attributes['wait.category'] TIMESERIES 5 minutes SINCE 1 hour ago"
            },
            {
              "title": "ðŸ“Š Resource Pressure Correlation",
              "type": "scatter",
              "query": "SELECT average(attributes['ml.resource_pressure']) as 'Resource Pressure', average(value) as 'Intelligence Score' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['wait.primary_category'] SINCE 1 hour ago"
            }
          ]
        },
        {
          "name": "Replication",
          "widgets": [
            {
              "title": "Replication Lag",
              "type": "line",
              "query": "SELECT average(mysql.replica.lag) as 'Lag (seconds)' FROM Metric WHERE instrumentation.provider = 'opentelemetry' FACET mysql.instance.endpoint TIMESERIES AUTO"
            },
            {
              "title": "Replication Status",
              "type": "table",
              "query": "SELECT latest(mysql.replica.io_running) as 'IO Running', latest(mysql.replica.sql_running) as 'SQL Running', latest(mysql.replica.lag) as 'Lag' FROM Metric WHERE instrumentation.provider = 'opentelemetry' FACET mysql.instance.endpoint"
            }
          ]
        }
      ]
    }
  ],
  "alerts": [
    {
      "name": "MySQL High Connection Usage",
      "query": "SELECT average(mysql.threads) / average(mysql.connection.max) * 100 FROM Metric WHERE instrumentation.provider = 'opentelemetry'",
      "threshold": 80,
      "duration": 5
    },
    {
      "name": "MySQL Replication Lag",
      "query": "SELECT max(mysql.replica.lag) FROM Metric WHERE instrumentation.provider = 'opentelemetry'",
      "threshold": 10,
      "duration": 5
    },
    {
      "name": "MySQL Critical Anomalies",
      "query": "SELECT filter(count(*), WHERE attributes['anomaly.severity'] = 'critical') FROM Metric WHERE instrumentation.provider = 'opentelemetry'",
      "threshold": 5,
      "duration": 3
    },
    {
      "name": "High Intelligence Score Alert",
      "query": "SELECT max(value) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive'",
      "threshold": 200,
      "duration": 5
    },
    {
      "name": "Business Revenue Impact Alert",
      "query": "SELECT sum(attributes['business.revenue_impact']) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive'",
      "threshold": 1000,
      "duration": 3
    }
  ]
}