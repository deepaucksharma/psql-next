services:
  # PostgreSQL Database with secure configuration
  postgres:
    image: postgres:15-alpine
    container_name: dbintel-postgres
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    secrets:
      - postgres_user
      - postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/postgres_user)"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # MySQL Database with secure configuration
  mysql:
    image: mysql:8.0
    container_name: dbintel-mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: testdb
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql
    secrets:
      - mysql_root_password
      - mysql_user
      - mysql_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # OpenTelemetry Collector with Database Intelligence - Secure Configuration
  otel-collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbintel-collector
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./config/docker-collector-secure.yaml:/etc/otel/config.yaml:ro
      - ./data:/var/lib/otel
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Health check
      - "13133:13133" # Health check extension
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=testdb
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=testdb
      - ENVIRONMENT=production
    secrets:
      - postgres_user
      - postgres_password
      - mysql_user
      - mysql_password
      - new_relic_license_key
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000"

  # Prometheus for metrics visualization - Secure
  prometheus:
    image: prom/prometheus:latest
    container_name: dbintel-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.external-url=http://localhost:9090'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector
    security_opt:
      - no-new-privileges:true
    user: "65534:65534"

  # Grafana for dashboards - Secure
  grafana:
    image: grafana/grafana:latest
    container_name: dbintel-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    ports:
      - "3000:3000"
    secrets:
      - grafana_admin_password
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true
    user: "472:472"

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_user:
    file: ./secrets/mysql_user.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  new_relic_license_key:
    file: ./secrets/new_relic_license_key.txt
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt

volumes:
  postgres_data:
  mysql_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: dbintel-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16