version: '3.8'

services:
  # PostgreSQL with monitoring user
  postgres:
    image: postgres:15-alpine
    container_name: postgres-monitored
    environment:
      POSTGRES_DB: production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "-c shared_preload_libraries=pg_stat_statements"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_logs:/var/log/postgresql
    command: >
      postgres
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_filename='postgresql-%Y-%m-%d_%H%M%S.log'
      -c log_statement='all'
      -c log_duration=on
      -c log_min_duration_statement=100
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL with performance schema
  mysql:
    image: mysql:8.0
    container_name: mysql-monitored
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: production
      MYSQL_USER: monitor
      MYSQL_PASSWORD: monitor
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_logs:/var/log/mysql
    command: >
      --default-authentication-plugin=mysql_native_password
      --slow_query_log=1
      --slow_query_log_file=/var/log/mysql/slow.log
      --long_query_time=2
      --log-queries-not-using-indexes=1
      --general_log=1
      --general_log_file=/var/log/mysql/general.log
      --performance_schema=ON
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database Intelligence Collector
  otel-collector:
    build:
      context: .
      dockerfile: Dockerfile
    image: database-intelligence-collector:latest
    container_name: db-intelligence-collector
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      # PostgreSQL settings
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: production
      POSTGRES_TLS_INSECURE: "true"
      
      # MySQL settings
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: production
      MYSQL_TLS_INSECURE: "true"
      
      # New Relic settings
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_OTLP_ENDPOINT: ${NEW_RELIC_OTLP_ENDPOINT:-https://otlp.nr-data.net:4318}
      
      # Collector settings
      ENVIRONMENT: production
      AWS_REGION: ${AWS_REGION:-us-east-1}
      DEPLOYMENT_TYPE: docker-compose
      SERVICE_VERSION: "1.0.0"
      HOSTNAME: ${HOSTNAME:-db-collector}
      
      # Performance settings
      COLLECTION_INTERVAL: 30s
      MEMORY_LIMIT_PERCENT: "75"
      BATCH_SIZE: "1000"
      BATCH_TIMEOUT: 10s
      
      # Logging
      LOG_LEVEL: info
      DEBUG_VERBOSITY: normal
      
    ports:
      - "8888:8888"   # Prometheus metrics
      - "55679:55679" # zPages
    volumes:
      - ./config/production-newrelic.yaml:/etc/otel/config.yaml
      - postgres_logs:/var/log/postgresql:ro
      - mysql_logs:/var/log/mysql:ro
      - otel_logs:/var/log/otel
    command: ["--config=/etc/otel/config.yaml"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8888/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sample application to generate database load
  load-generator:
    build:
      context: .
      dockerfile: Dockerfile.loadgen
    container_name: load-generator
    depends_on:
      - postgres
      - mysql
    environment:
      POSTGRES_DSN: "postgres://postgres:postgres@postgres:5432/production?sslmode=disable"
      MYSQL_DSN: "root:mysql@tcp(mysql:3306)/production"
      LOAD_INTERVAL: "5s"
      QUERY_TYPES: "simple,complex,slow"
    restart: unless-stopped

  # Monitoring dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards
      - ./datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - otel-collector

volumes:
  postgres_data:
  postgres_logs:
  mysql_data:
  mysql_logs:
  otel_logs:
  grafana_data:

networks:
  default:
    name: db-intelligence-network