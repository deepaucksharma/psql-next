{
  "name": "MySQL Intelligence - Maximum Value Dashboard",
  "description": "Comprehensive MySQL monitoring with business impact, statistical insights, and automated recommendations",
  "permissions": "PUBLIC_READ_WRITE",
  "pages": [
    {
      "name": "Executive Business Impact",
      "description": "C-level view of database impact on business metrics",
      "widgets": [
        {
          "title": "Real-Time Revenue Impact",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "revenue_impact",
                "type": "currency"
              }
            ],
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT sum(business.revenue_impact * CASE WHEN dateOf(timestamp) = dateOf(now()) AND hourOf(timestamp) >= 9 AND hourOf(timestamp) <= 17 THEN 3.0 WHEN dayOfWeek(timestamp) IN ('Saturday', 'Sunday') THEN 0.5 ELSE 1.0 END) as 'Revenue Impact' FROM Metric WHERE instrumentation.provider = 'opentelemetry' AND business_criticality IN ('CRITICAL', 'HIGH') SINCE 1 hour ago"
              }
            ],
            "thresholds": [
              {
                "alertSeverity": "WARNING",
                "value": 10000
              },
              {
                "alertSeverity": "CRITICAL",
                "value": 50000
              }
            ]
          }
        },
        {
          "title": "Fleet Health Score",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "visualization": {
            "id": "viz.gauge"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT average(100 - (statistics.composite_score * 10)) as 'Fleet Health' FROM Metric WHERE instrumentation.provider = 'opentelemetry' AND metricName = 'mysql.health.score' SINCE 5 minutes ago"
              }
            ],
            "thresholds": [
              {
                "value": 50,
                "alertSeverity": "CRITICAL"
              },
              {
                "value": 70,
                "alertSeverity": "WARNING"
              },
              {
                "value": 90,
                "alertSeverity": "NOT_ALERTING"
              }
            ]
          }
        },
        {
          "title": "SLA Compliance Rate",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [
              {
                "name": "sla_compliance",
                "type": "percentage"
              }
            ],
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT percentage(count(*), WHERE sla_impact != 'violation') as 'SLA Compliance' FROM Metric WHERE instrumentation.provider = 'opentelemetry' AND business_criticality IN ('CRITICAL', 'HIGH') SINCE 24 hours ago"
              }
            ],
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 95
              },
              {
                "alertSeverity": "WARNING",
                "value": 99
              }
            ]
          }
        },
        {
          "title": "Business Function Impact Matrix",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 8,
            "height": 4
          },
          "visualization": {
            "id": "viz.heatmap"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT sum(business_impact_score * query_count) FROM Metric WHERE instrumentation.provider = 'opentelemetry' FACET business_category, dateOf(timestamp), hourOf(timestamp) SINCE 24 hours ago"
              }
            ]
          }
        },
        {
          "title": "Predictive Risk Score",
          "layout": {
            "column": 9,
            "row": 4,
            "width": 4,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT predictLinear(average(statistics.risk_prediction), 3600) as 'Predicted Risk (1hr)', average(statistics.risk_prediction) as 'Current Risk' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES 5 minutes SINCE 6 hours ago EXTRAPOLATE"
              }
            ],
            "yAxisLeft": {
              "zero": true
            }
          }
        }
      ]
    },
    {
      "name": "Intelligence Command Center",
      "description": "Advanced statistical insights and recommendations",
      "widgets": [
        {
          "title": "Top Intelligence Issues",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 12,
            "height": 3
          },
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT latest(attributes['query_text']) as 'Query', average(value) as 'Score', latest(attributes['performance_issue']) as 'Issue', latest(attributes['recommendations']) as 'Recommendation', sum(attributes['business.revenue_impact']) as 'Revenue Impact' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND value > 100 FACET attributes['query_digest'] SINCE 1 hour ago LIMIT 20"
              }
            ]
          }
        },
        {
          "title": "Statistical Anomaly Detection Timeline",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 8,
            "height": 4
          },
          "visualization": {
            "id": "viz.scatter"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT statistics.anomaly_score, statistics.confidence FROM Metric WHERE attributes['statistics.is_anomaly'] = 'true' AND instrumentation.provider = 'opentelemetry' FACET anomaly_type, statistics.algorithm TIMESERIES 1 minute SINCE 2 hours ago"
              }
            ],
            "yAxisLeft": {
              "zero": false
            }
          }
        },
        {
          "title": "Automated Recommendations",
          "layout": {
            "column": 9,
            "row": 4,
            "width": 4,
            "height": 4
          },
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## Top Recommendations\n\n### ðŸ”´ Critical\n- **Missing Index**: `orders.customer_id` - Est. 40% improvement\n- **Connection Pool**: Increase to 200 - Est. 25% reduction in waits\n\n### ðŸŸ¡ Warning\n- **Query Rewrite**: JOIN optimization for order_items\n- **Buffer Pool**: Increase by 2GB for better cache hits\n\n### ðŸŸ¢ Optimization\n- **Partition**: Consider partitioning orders table by date\n- **Archive**: Move data older than 90 days"
          }
        }
      ]
    },
    {
      "name": "Performance Surgery",
      "description": "Real-time performance deep dive",
      "widgets": [
        {
          "title": "Live Query Profiler",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 8,
            "height": 4
          },
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT attributes['query_digest'] as 'Query', count(*) as 'Executions', average(attributes['current_exec_time_ms']) as 'Avg Time', max(attributes['current_exec_time_ms']) as 'Max Time', latest(attributes['current_wait_profile']) as 'Wait Profile', latest(attributes['lock_status']) as 'Lock Status' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND attributes['current_exec_time_ms'] > 0 FACET attributes['query_digest'] SINCE 5 minutes ago LIMIT 50"
              }
            ]
          }
        },
        {
          "title": "Wait Event Distribution",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 4
          },
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT sum(attributes['current_wait_time_ms']) FROM Metric WHERE metricName = 'mysql.query.wait_profile' FACET attributes['wait.primary_category'] SINCE 5 minutes ago"
              }
            ]
          }
        },
        {
          "title": "Lock Dependency Graph",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT count(*) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND attributes['lock_status'] IN ('BLOCKING', 'BLOCKED') FACET blocking_thread_id, blocked_thread_id TIMESERIES 1 minute SINCE 30 minutes ago"
              }
            ]
          }
        },
        {
          "title": "Resource Pressure Correlation",
          "layout": {
            "column": 7,
            "row": 5,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.heat-map"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT average(cpu_pressure_score), average(memory_pressure_score), average(io_pressure_score) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['query_digest'], minuteOf(timestamp) SINCE 1 hour ago"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Cross-Signal Correlation",
      "description": "Trace, log, and metric correlation",
      "widgets": [
        {
          "title": "Trace-Metric Correlation Strength",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 6,
            "height": 3
          },
          "visualization": {
            "id": "viz.stacked-bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT count(*) FROM Metric WHERE correlation.enabled = 'true' FACET correlation.confidence, service.name SINCE 1 hour ago"
              }
            ]
          }
        },
        {
          "title": "Exemplar Distribution",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 6,
            "height": 3
          },
          "visualization": {
            "id": "viz.histogram"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT histogram(traces_spanmetrics_latency, 50, 20) FROM Metric WHERE exemplar.trace_id IS NOT NULL SINCE 1 hour ago"
              }
            ]
          }
        },
        {
          "title": "Multi-Signal Anomaly Correlation",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 12,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT average(cross_signal.risk_score) as 'Risk Score', count(*) as 'Correlated Signals' FROM Metric WHERE cross_signal.anomaly = true FACET service.name TIMESERIES 5 minutes SINCE 2 hours ago"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Predictive Analytics",
      "description": "Statistical predictions and forecasting",
      "widgets": [
        {
          "title": "Query Performance Prediction",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT predictLinear(average(query_duration_ms), 3600) as 'Predicted (1hr)', average(query_duration_ms) as 'Current' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['query_digest'] TIMESERIES 5 minutes SINCE 6 hours ago EXTRAPOLATE LIMIT 5"
              }
            ]
          }
        },
        {
          "title": "Capacity Planning Forecast",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT predictLinear(max(mysql.connections.current), 86400) as 'Predicted Connections (24hr)', max(mysql.connections.current) as 'Current', average(mysql.connections.max) as 'Max Allowed' FROM Metric WHERE instrumentation.provider = 'opentelemetry' TIMESERIES 30 minutes SINCE 7 days ago EXTRAPOLATE"
              }
            ]
          }
        },
        {
          "title": "Anomaly Forecast",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 12,
            "height": 3
          },
          "visualization": {
            "id": "viz.event-stream"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT timestamp, anomaly_type, statistics.anomaly_score, statistics.confidence, predictLinear(statistics.anomaly_score, 1800) as 'Predicted Score (30min)' FROM Metric WHERE statistics.is_anomaly = true OR predictLinear(statistics.anomaly_score, 1800) > 3 SINCE 2 hours ago LIMIT 100"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Automated Actions",
      "description": "Insights to automated remediation",
      "widgets": [
        {
          "title": "Action Required Queue",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 8,
            "height": 3
          },
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT latest(action.required) as 'Action', latest(query_text) as 'Query', latest(business.revenue_impact) as 'Revenue Impact', latest(lock_status) as 'Status', latest(current_exec_time_ms) as 'Exec Time' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' AND attributes['action.required'] IS NOT NULL FACET query_digest, timestamp SINCE 30 minutes ago LIMIT 20"
              }
            ]
          }
        },
        {
          "title": "Automation Success Rate",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT percentage(count(*), WHERE automation.status = 'success') as 'Success Rate' FROM Metric WHERE automation.attempted = true SINCE 24 hours ago"
              }
            ]
          }
        },
        {
          "title": "Impact of Automated Actions",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 12,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT average(performance.improvement_percent) as 'Performance Improvement', sum(cost.savings_per_hour) as 'Cost Savings/Hr' FROM Metric WHERE automation.completed = true FACET automation.type TIMESERIES 1 hour SINCE 7 days ago"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Cost Optimization",
      "description": "Resource utilization and cost analysis",
      "widgets": [
        {
          "title": "Cost by Query Pattern",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT sum(cost.compute_impact + cost.io_impact) FROM MySQLIntelligence FACET query_digest SINCE 24 hours ago LIMIT 10"
              }
            ]
          }
        },
        {
          "title": "Optimization Opportunities",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 6,
            "height": 4
          },
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT latest(optimization.type) as 'Optimization', sum(optimization.potential_savings) as 'Potential Savings', latest(optimization.effort) as 'Effort', latest(optimization.risk) as 'Risk' FROM Metric WHERE optimization.potential_savings > 0 FACET optimization.id SINCE 7 days ago"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Advanced Patterns",
      "description": "Pattern recognition and workload intelligence",
      "widgets": [
        {
          "title": "Workload Classification",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 8,
            "height": 4
          },
          "visualization": {
            "id": "viz.sunburst"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT count(*) FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' FACET attributes['statistics.workload_type'], attributes['business_category'], attributes['db_schema'] SINCE 1 hour ago"
              }
            ]
          }
        },
        {
          "title": "Query Pattern Evolution",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 4
          },
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": "${NEW_RELIC_ACCOUNT_ID}",
                "query": "SELECT uniqueCount(query_digest) as 'Unique Patterns', count(*) / uniqueCount(query_digest) as 'Avg Executions per Pattern' FROM Metric WHERE metricName = 'mysql.intelligence.comprehensive' TIMESERIES 1 hour SINCE 7 days ago"
              }
            ]
          }
        }
      ]
    }
  ]
}