receivers:
  mysql:
    endpoint: mysql-master:3306
    username: root
    password: rootpassword
    database: test_db
    collection_interval: 10s
    transport: tcp

  mysql/replica:
    endpoint: mysql-replica:3306
    username: root
    password: rootpassword
    database: test_db
    collection_interval: 10s
    transport: tcp

  # Custom SQL queries for replication monitoring
  sqlquery:
    driver: mysql
    datasource: "root:rootpassword@tcp(mysql-master:3306)/test_db"
    queries:
      - sql: |
          SHOW MASTER STATUS
        metrics:
          - metric_name: mysql.replication.master.log_file
            value_column: "File"
            value_type: string
            attribute_columns:
              - "Position"
              - "Binlog_Do_DB"
              - "Binlog_Ignore_DB"
          - metric_name: mysql.replication.master.log_position
            value_column: "Position"
            value_type: int
        collection_interval: 10s

  sqlquery/replica:
    driver: mysql
    datasource: "root:rootpassword@tcp(mysql-replica:3306)/test_db"
    queries:
      - sql: |
          SHOW SLAVE STATUS
        metrics:
          - metric_name: mysql.replication.slave.io_running
            value_column: "Slave_IO_Running"
            value_type: string
          - metric_name: mysql.replication.slave.sql_running
            value_column: "Slave_SQL_Running"
            value_type: string
          - metric_name: mysql.replication.slave.seconds_behind_master
            value_column: "Seconds_Behind_Master"
            value_type: int
            attribute_columns:
              - "Master_Host"
              - "Master_User"
              - "Master_Port"
          - metric_name: mysql.replication.slave.last_error
            value_column: "Last_Error"
            value_type: string
            attribute_columns:
              - "Last_Errno"
          - metric_name: mysql.replication.slave.exec_master_log_pos
            value_column: "Exec_Master_Log_Pos"
            value_type: int
            attribute_columns:
              - "Master_Log_File"
              - "Relay_Log_File"
        collection_interval: 5s

      - sql: |
          SELECT 
            @@gtid_executed as executed_gtid_set,
            @@gtid_purged as purged_gtid_set
        metrics:
          - metric_name: mysql.replication.gtid.executed
            value_column: "executed_gtid_set"
            value_type: string
          - metric_name: mysql.replication.gtid.purged
            value_column: "purged_gtid_set"
            value_type: string
        collection_interval: 10s

      - sql: |
          SELECT 
            CHANNEL_NAME,
            SERVICE_STATE,
            LAST_ERROR_NUMBER,
            LAST_ERROR_MESSAGE,
            LAST_ERROR_TIMESTAMP
          FROM performance_schema.replication_connection_status
        metrics:
          - metric_name: mysql.replication.connection.status
            value_column: "SERVICE_STATE"
            value_type: string
            attribute_columns:
              - "CHANNEL_NAME"
              - "LAST_ERROR_NUMBER"
              - "LAST_ERROR_MESSAGE"
        collection_interval: 10s

      - sql: |
          SELECT 
            CHANNEL_NAME,
            THREAD_ID,
            SERVICE_STATE,
            LAST_ERROR_NUMBER,
            LAST_ERROR_MESSAGE
          FROM performance_schema.replication_applier_status
        metrics:
          - metric_name: mysql.replication.applier.status
            value_column: "SERVICE_STATE"
            value_type: string
            attribute_columns:
              - "CHANNEL_NAME"
              - "THREAD_ID"
              - "LAST_ERROR_NUMBER"
        collection_interval: 10s

processors:
  batch:
    timeout: 10s
    send_batch_size: 1000

  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  resource:
    attributes:
      - key: service.name
        value: mysql-replication-monitor
        action: insert
      - key: service.version
        value: "1.0.0"
        action: insert
      - key: deployment.environment
        value: production
        action: insert

  attributes:
    actions:
      - key: db.system
        value: mysql
        action: insert
      - key: db.connection_string
        action: delete

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: mysql_replication
    const_labels:
      monitor: "replication"
    resource_to_telemetry_conversion:
      enabled: true

  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: "/health"
    check_collector_pipeline:
      enabled: true
      interval: "5m"
      exporter_failure_threshold: 5

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    metrics:
      receivers: [mysql, mysql/replica, sqlquery, sqlquery/replica]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [prometheus, debug]
  telemetry:
    logs:
      level: info
      development: false
      encoding: json
      sampling:
        initial: 10
        thereafter: 100
    metrics:
      level: detailed
      address: 0.0.0.0:8888