receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # MySQL receiver for database metrics
  mysql:
    endpoint: canary-mysql:3306
    username: root
    password: rootpassword
    database: test
    collection_interval: 30s
    metrics:
      mysql.buffer_pool.operations:
        enabled: true
      mysql.buffer_pool.pages:
        enabled: true
      mysql.buffer_pool.data:
        enabled: true
      mysql.commands:
        enabled: true
      mysql.connections:
        enabled: true
      mysql.locks:
        enabled: true
      mysql.operations:
        enabled: true
      mysql.query.count:
        enabled: true
      mysql.query.slow.count:
        enabled: true
      mysql.replica.lag:
        enabled: true
      mysql.threads:
        enabled: true
      mysql.uptime:
        enabled: true

  # Prometheus receiver for canary metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'canary-tester'
          scrape_interval: 15s
          static_configs:
            - targets: ['canary-tester:8090']

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Add resource attributes
  resource:
    attributes:
      - key: service.name
        value: canary-tester
        action: insert
      - key: service.version
        value: "1.0.0"
        action: insert
      - key: deployment.environment
        value: production
        action: insert

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Add metric attributes for canary queries
  attributes/canary:
    actions:
      - key: monitoring.type
        value: synthetic
        action: insert
      - key: canary.enabled
        value: "true"
        action: insert

exporters:
  # Console exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 10
    sampling_thereafter: 100

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8888"
    metric_expiration: 10m
    resource_to_telemetry_conversion:
      enabled: true

  # OTLP exporter (for forwarding to other collectors)
  otlp/external:
    endpoint: "${OTLP_ENDPOINT:}"
    tls:
      insecure: true
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    metrics:
      receivers: [otlp, mysql, prometheus]
      processors: [memory_limiter, batch, resource, attributes/canary]
      exporters: [logging, prometheus]
    
    metrics/external:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [otlp/external]