receivers:
  # PostgreSQL metrics collection
  postgresql:
    endpoint: ${env:POSTGRES_HOST}:${env:POSTGRES_PORT}
    username: ${env:POSTGRES_USER}
    password: ${env:POSTGRES_PASSWORD}
    databases:
      - ${env:POSTGRES_DATABASE}
    collection_interval: ${env:COLLECTION_INTERVAL}
    tls:
      insecure: ${env:POSTGRES_TLS_INSECURE}
      insecure_skip_verify: true
      
  # MySQL metrics collection
  mysql:
    endpoint: ${env:MYSQL_HOST}:${env:MYSQL_PORT}
    username: ${env:MYSQL_USER}
    password: ${env:MYSQL_PASSWORD}
    database: ${env:MYSQL_DATABASE}
    collection_interval: ${env:COLLECTION_INTERVAL}
    tls:
      insecure: ${env:MYSQL_TLS_INSECURE}

  # Query logs collection (for custom processors)
  filelog:
    include: [ "/var/log/postgresql/*.log", "/var/log/mysql/*.log" ]
    start_at: beginning
    operators:
      - type: regex_parser
        regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
        timestamp:
          parse_from: attributes.timestamp
          layout: '2006-01-02 15:04:05.000 MST'
      - type: filter
        expr: 'attributes.message matches "duration:"'

processors:
  # Memory protection
  memory_limiter:
    check_interval: 1s
    limit_mib: 1024
    spike_limit_mib: 256
    
  # Add essential resource attributes
  resource:
    attributes:
      - key: collector.name
        value: otelcol
        action: upsert
      - key: service.name
        value: database-intelligence
        action: upsert
      - key: environment
        value: ${env:ENVIRONMENT}
        action: upsert
      - key: deployment.region
        value: ${env:AWS_REGION}
        action: upsert
      - key: deployment.type
        value: ${env:DEPLOYMENT_TYPE}
        action: upsert
      - key: service.version
        value: ${env:SERVICE_VERSION}
        action: upsert
        
  # Transform metrics for New Relic compatibility
  transform:
    error_mode: ignore
    metric_statements:
      - context: metric
        statements:
          # Add New Relic required attributes
          - set(resource.attributes["service.instance.id"], "${env:HOSTNAME}")
          - set(resource.attributes["telemetry.sdk.name"], "opentelemetry")
          - set(resource.attributes["telemetry.sdk.language"], "go")
          
  # Plan attribute extraction for logs
  planattributeextractor:
    safe_mode: true
    timeout_ms: 1000
    error_mode: ignore
    postgresql_rules:
      detection_jsonpath: "$.message"
      extractions:
        "db.query.duration": '$.duration'
        "db.query.text": '$.query'
    
  # Batch for efficiency
  batch:
    send_batch_size: ${env:BATCH_SIZE}
    timeout: ${env:BATCH_TIMEOUT}
    send_batch_max_size: 2000

exporters:
  # New Relic OTLP exporter
  otlp/newrelic:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      "api-key": ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 1000
      
  # Local file backup (optional)
  file:
    path: /var/log/otel/metrics.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3
      
  # Debug output (disable in production)
  debug:
    verbosity: ${env:DEBUG_VERBOSITY}

extensions:
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [zpages]
  
  telemetry:
    logs:
      level: ${env:LOG_LEVEL}
      encoding: json
      output_paths: ["stdout", "/var/log/otel/collector.log"]
      error_output_paths: ["stderr"]
      initial_fields:
        service: "database-intelligence-collector"
        version: "${env:SERVICE_VERSION}"
    metrics:
      level: detailed
      address: 0.0.0.0:8888
      
  pipelines:
    # Metrics pipeline for database metrics
    metrics:
      receivers: [postgresql, mysql]
      processors: [memory_limiter, resource, transform, batch]
      exporters: [otlp/newrelic, file]
      
    # Logs pipeline for query analysis
    logs:
      receivers: [filelog]
      processors: [memory_limiter, planattributeextractor, resource, batch]
      exporters: [otlp/newrelic]