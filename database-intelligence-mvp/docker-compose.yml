services:
  # PostgreSQL Database - Development with improved security
  postgres:
    image: postgres:15-alpine
    container_name: dbintel-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword123
      POSTGRES_DB: testdb
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # MySQL Database - Development with improved security
  mysql:
    image: mysql:8.0
    container_name: dbintel-mysql
    environment:
      MYSQL_ROOT_PASSWORD: devrootpass123
      MYSQL_DATABASE: testdb
      MYSQL_USER: mysql
      MYSQL_PASSWORD: devmysqlpass123
    ports:
      - "127.0.0.1:3306:3306"  # Bind to localhost only
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # OpenTelemetry Collector with Database Intelligence - Development Security
  otel-collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbintel-collector
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./config/docker-collector.yaml:/etc/otel/config.yaml:ro
      - ./data:/var/lib/otel
    ports:
      - "127.0.0.1:4317:4317"   # OTLP gRPC - localhost only
      - "127.0.0.1:4318:4318"   # OTLP HTTP - localhost only
      - "127.0.0.1:8888:8888"   # Prometheus metrics - localhost only
      - "127.0.0.1:8889:8889"   # Health check - localhost only
      - "127.0.0.1:13133:13133" # Health check extension - localhost only
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=devpassword123
      - POSTGRES_DB=testdb
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=devmysqlpass123
      - MYSQL_DB=testdb
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY:-dummy_key}
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000"

  # Prometheus for metrics visualization - Development Security
  prometheus:
    image: prom/prometheus:latest
    container_name: dbintel-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.external-url=http://localhost:9090'
      - '--storage.tsdb.retention.time=7d'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "127.0.0.1:9090:9090"  # Localhost only
    depends_on:
      - otel-collector
    security_opt:
      - no-new-privileges:true
    user: "65534:65534"

  # Grafana for dashboards - Development Security
  grafana:
    image: grafana/grafana:latest
    container_name: dbintel-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=devadmin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    ports:
      - "127.0.0.1:3000:3000"  # Localhost only
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true
    user: "472:472"

  # Test data generator - Development Security
  test-generator:
    build:
      context: .
      dockerfile: Dockerfile.test-generator
    container_name: dbintel-test-generator
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=devpassword123
      - POSTGRES_DB=testdb
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=devmysqlpass123
      - MYSQL_DB=testdb
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
    profiles:
      - test
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000"

volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: dbintel-network-dev
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16