extensions:
  healthcheck:
    endpoint: 0.0.0.0:13133

receivers:
  postgresql:
    endpoint: localhost:5432
    username: postgres
    password: postgres
    databases:
      - testdb
    collection_interval: 10s
    tls:
      insecure: true

  mysql:
    endpoint: localhost:3306
    username: root
    password: root
    database: testdb
    collection_interval: 10s

processors:
  # Verification processor
  verification:
    enable_periodic_verification: true
    verification_interval: 30s
    data_freshness_threshold: 5m
    min_entity_correlation_rate: 0.8
    min_normalization_rate: 0.9
    require_entity_synthesis: true
    export_feedback_as_logs: true

  # Adaptive sampler
  adaptivesampler:
    max_sampling_rate: 100
    min_sampling_rate: 1
    target_metrics_per_minute: 1000
    adjustment_period: 30s

  # Circuit breaker
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    recovery_timeout: 30s
    half_open_requests: 3

  # Query correlator
  querycorrelator:
    retention_period: 1h
    cleanup_interval: 10m
    enable_table_correlation: true
    enable_database_correlation: true

  # Cost control processor
  costcontrol:
    monthly_budget_usd: 1000.0
    price_per_gb: 0.35
    metric_cardinality_limit: 10000
    slow_span_threshold_ms: 2000
    max_log_body_size: 10240
    reporting_interval: 60s
    aggressive_mode: false
    data_plus_enabled: false

  # NR error monitor
  nrerrormonitor:
    enabled: true
    batch_timeout: 10s
    batch_size: 100
    alert_on_error: true

  # Plan attribute extractor
  planattributeextractor:
    safe_mode: true
    postgresql_rules:
      extractions:
        "db.query.plan.rows": "Plan.Plan Rows"
        "db.query.plan.cost": "Plan.Total Cost"
    mysql_rules:
      extractions:
        "db.query.rows_examined": "rows_examined"

exporters:
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 100

  prometheus:
    endpoint: "0.0.0.0:8890"
    resource_to_telemetry_conversion:
      enabled: true

service:
  extensions: [healthcheck]
  pipelines:
    metrics:
      receivers: [postgresql, mysql]
      processors: [
        verification,
        adaptivesampler,
        circuitbreaker,
        querycorrelator,
        costcontrol,
        nrerrormonitor,
        planattributeextractor
      ]
      exporters: [debug, prometheus]
  telemetry:
    logs:
      level: debug