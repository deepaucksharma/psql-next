receivers:
  postgresql:
    endpoint: ${env:POSTGRES_HOST}:${env:POSTGRES_PORT}
    username: ${env:POSTGRES_USER}
    password: ${env:POSTGRES_PASSWORD}
    databases:
      - testdb
    collection_interval: 10s
    tls:
      insecure: true

  mysql:
    endpoint: ${env:MYSQL_HOST}:${env:MYSQL_PORT}
    username: ${env:MYSQL_USER}
    password: ${env:MYSQL_PASSWORD}
    database: testdb
    collection_interval: 10s
    tls:
      insecure: true

  sqlquery:
    driver: postgres
    datasource: "host=${env:POSTGRES_HOST} port=${env:POSTGRES_PORT} user=${env:POSTGRES_USER} password=${env:POSTGRES_PASSWORD} dbname=testdb sslmode=disable"
    queries:
      - sql: "SELECT COUNT(*) as active_connections, current_database() as database FROM pg_stat_activity WHERE state = 'active'"
        metrics:
          - metric_name: sqlquery.active_connections
            value_column: active_connections
            value_type: int
            attribute_columns:
              - database
    collection_interval: 30s

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 75
    spike_limit_percentage: 20

  batch:
    # Optimized for New Relic limits per best practices
    timeout: 10s
    send_batch_size: 1000
    send_batch_max_size: 2000

  resource:
    # Critical for New Relic entity synthesis
    attributes:
      - key: service.name
        value: database-intelligence-e2e
        action: insert
      - key: host.id
        value: ${env:HOSTNAME}
        action: insert
      - key: deployment.environment
        value: e2e-test
        action: insert
      - key: test.environment
        value: e2e
        action: insert
      - key: test.run_id
        value: ${env:TEST_RUN_ID}
        action: insert

  attributes:
    # Cardinality management per best practices
    actions:
      - key: test.environment
        value: e2e
        action: insert
      - key: test.run_id
        value: ${env:TEST_RUN_ID}
        action: insert
      # Drop high-cardinality attributes
      - key: query_text
        action: delete
      - key: user_id
        action: delete
      - key: session_id
        action: delete

exporters:
  # Debug exporter for console output
  debug:
    verbosity: detailed
    sampling_initial: 10
    sampling_thereafter: 100

  # File exporter for local validation
  file:
    path: /tmp/e2e-metrics.json
    format: json

  # Prometheus exporter for local metrics
  prometheus:
    endpoint: 0.0.0.0:8889
    const_labels:
      test_environment: e2e

service:
  pipelines:
    metrics/postgres:
      receivers: [postgresql]
      processors: [memory_limiter, resource, attributes, batch]
      exporters: [debug, file, prometheus]

    metrics/mysql:
      receivers: [mysql]
      processors: [memory_limiter, resource, attributes, batch]
      exporters: [debug, file, prometheus]

    metrics/custom:
      receivers: [sqlquery]
      processors: [memory_limiter, resource, attributes, batch]
      exporters: [debug, file, prometheus]

  telemetry:
    logs:
      level: info
      output_paths: ["/tmp/e2e-collector.log", "stdout"]
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  extensions: [health_check, pprof, zpages]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679