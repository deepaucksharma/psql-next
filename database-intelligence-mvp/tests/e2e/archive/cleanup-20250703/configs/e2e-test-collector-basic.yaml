# Minimal E2E test configuration for basic go build
# Only uses receivers and exporters, no processors (since they're not registered in main.go)

receivers:
  postgresql:
    endpoint: ${env:POSTGRES_HOST}:${env:POSTGRES_PORT}
    username: ${env:POSTGRES_USER}
    password: ${env:POSTGRES_PASSWORD}
    databases:
      - testdb
    collection_interval: 10s
    tls:
      insecure: true

  mysql:
    endpoint: ${env:MYSQL_HOST}:${env:MYSQL_PORT}
    username: ${env:MYSQL_USER}
    password: ${env:MYSQL_PASSWORD}
    database: testdb
    collection_interval: 10s
    tls:
      insecure: true

  sqlquery:
    driver: postgres
    datasource: "host=${env:POSTGRES_HOST} port=${env:POSTGRES_PORT} user=${env:POSTGRES_USER} password=${env:POSTGRES_PASSWORD} dbname=testdb sslmode=disable"
    queries:
      - sql: "SELECT COUNT(*) as active_connections, current_database() as database FROM pg_stat_activity WHERE state = 'active'"
        metrics:
          - metric_name: sqlquery.active_connections
            value_column: active_connections
            value_type: int
            attribute_columns:
              - database
    collection_interval: 30s

exporters:
  # Debug exporter for console output
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 100

  # File exporter for validation
  file:
    path: /tmp/e2e-metrics.json
    rotation:
      enabled: false

  # Prometheus exporter for metrics endpoint
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: test
    const_labels:
      test_environment: e2e
      test_run_id: ${env:TEST_RUN_ID}
      # Add entity synthesis attributes as const_labels for test
      service_name: database-intelligence-e2e
      host_id: ${env:HOSTNAME}
      deployment_environment: e2e-test

service:
  pipelines:
    # Direct pipelines without processors
    metrics/postgres:
      receivers: [postgresql]
      exporters: [debug, file, prometheus]

    metrics/mysql:
      receivers: [mysql]
      exporters: [debug, file, prometheus]

    metrics/custom:
      receivers: [sqlquery]
      exporters: [debug, file, prometheus]

  telemetry:
    logs:
      level: info
      output_paths: ["/tmp/e2e-collector.log", "stdout"]
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  extensions: [health_check, pprof, zpages]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: /healthz

  pprof:
    endpoint: 0.0.0.0:1777

  zpages:
    endpoint: 0.0.0.0:55679